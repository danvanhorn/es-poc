version: '3.4'
services:
  es-poc:
    build:
      dockerfile: './Dockerfile'
      context: './es-poc'
    container_name: es-poc
    networks:
      - db
      - elastic
    ports:
      - "5000:5000"
  mongo:
    image: 'mongo:4'
    container_name: mongo
    restart: always
    networks:
      - db
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/usr/share/mongo/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on:
      - mongo
    restart: always
    ports:
      - 8081:8081
    networks:
      - db
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticdata:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - elastic
    ports:
      - '5601:5601'
  azurite:
    image: 'arafato/azurite'
    container_name: azurite
    volumes:
     - es-poc/azurite/folder:opt/azurite/folder
    ports:
     - '10000:10000'

volumes:
  ? elasticdata
  ? mongodata

networks:
  ? db
  ? elastic
